generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum UserRole {
  USER
  ADMIN
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String   @unique
  emailVerified DateTime?
  phoneNumber   String?
  image         String?
  password      String?
  role          UserRole   @default(USER)
  accounts      Account[]
  createdAt     DateTime  @default(now())
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  createdAt     DateTime  @default(now())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
model VerificationToken {
  id        String   @id @default(cuid()) @map("_id")
  email     String
  token     String  @unique
  expires   DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id       String   @id @default(cuid()) @map("_id")
  email     String
  token     String  @unique
  expires   DateTime

  @@unique([email, token])
}

// model Purchase {
//   id String @id @default(uuid())
//   userId String
// }

// model StripeCustomer {
//   id String @id @default(uuid())
//   userId String @unique
//   stripeCustomerId String @unique

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }